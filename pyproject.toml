[tool.poetry]
name = "gamedex"
version = "0.1.0"
description = "Board Game Collection Manager with AI-powered recommendations"
authors = ["GameDex Team <team@gamedex.app>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.13"
uvicorn = {extras = ["standard"], version = "^0.34.3"}
sqlalchemy = "^2.0.41"
jinja2 = "^3.1.6"
python-multipart = "^0.0.20"
openai = "^1.90.0"
psycopg2-binary = "^2.9.10"
python-dotenv = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
black = "^25.1.0"
flake8 = "^7.3.0"
pytest-asyncio = "^0.24.0"
httpx = "^0.28.0"
isort = "^6.0.1"

[tool.poetry.scripts]
gamedex = "app.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E701"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".mypy_cache",
    ".pytest_cache"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.isort]
profile = "black"
